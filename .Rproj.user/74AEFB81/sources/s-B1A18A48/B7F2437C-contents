library(tidyverse)
conversation_files <- str_c("data/conversation_data/",
                            list.files("data/conversation_data/",
                                       recursive = T,
                                       pattern = "conversationstrings\\.txt$"))
file_cn_mapped <- map(conversation_files,read_lines)
file_cn_reduced <- reduce(file_cn_mapped,append)

#tidy texts ----------------
file_table <- str_split_fixed(file_cn_reduced,"=",2) %>%
    as.tibble() %>%
    rename(key = V1, value = V2) %>%
    separate(key,into = c("key1","key2","key3"),sep = "/")


#get mapping table --------
#get the table that maps english to chinese
name_table <- file_table %>%
    dplyr::filter(key1 == "Character" & key2 == "Name") %>%
    mutate(english = key3,chinese = value) %>%
    select(english,chinese)

#some items have different names, so I need to add a table manually
# extra_name_en <- c("Barbarian","Crusader","Gazlowe","Illidan","Kerrigan","Mira",
#                  "TyraelMecha","Volskaya","Orphea","RavenLord")
# extra_name_cn <- c("桑娅","乔汉娜","加兹鲁维","伊利丹","凯瑞甘","米拉韩",
#                         "机甲泰瑞尔","雅典娜","欧菲亚","乌鸦王")
extra_name_list <- c(Barbarian = "桑娅",
                     Crusader = "乔汉娜",
                     Gazlowe = "加兹鲁维",
                     Illidan = "伊利丹",
                     Kerrigan = "凯瑞甘",
                     Mira = "米拉韩",
                     TyraelMecha = "机甲泰瑞尔",
                     Volskaya = "沃斯卡亚",
                     Orphea = "欧菲亚",
                     KelThuzad = "克尔苏加德",
                     RavenLord = "乌鸦王")
name_table <- name_table %>%
    bind_rows(tibble(english = names(extra_name_list),
                     chinese = extra_name_list))
#replace untranslated items
extra_translation_list <- c(Cloaken = "凯文",
                            `Orc Johanna` = "兽人乔汉娜",
                            `Jaina Dreadlord` = "恐惧魔王吉安娜",
                            `MiraHan` = "米拉韩",
                            Probius = "普罗比斯")
name_table <- name_table %>%
    mutate(chinese = ifelse(is.na(chinese),
                            extra_translation_list[english], chinese)) %>%
    mutate(chinese = unname(chinese))

# get announcer rows---------------
same_player_announcer <- file_table %>%
    dplyr::filter(str_detect(key3,"HeroSelectPlayer"))


same_player_announcer_full <- same_player_announcer %>%
    mutate(hero = str_remove(key2,"A$|Announcer$")) %>%
    left_join(name_table,by = c("hero"="english")) %>%
    distinct(key2,key3,.keep_all = T)

text_table_same <- same_player_announcer_full %>%
    select(hero,chinese,value) %>%
    rename(english = hero)

text_table_same %>% filter(is.na(chinese))
#some how heros names are not mapped
another_name_list <- c(Kelthuzad = "克尔苏加德",
                       Maiev = "玛维")

text_table_same <- text_table_same %>% 
    mutate(chinese = ifelse(is.na(chinese),
                            another_name_list[english],
                            chinese))

#check if there is missing chinese text
if(any(is.na(text_table_same$chinese))) stop("text_table_same")

output_table <- text_table_same %>%
    distinct(english,value,.keep_all = T) %>%
    mutate(value = str_replace_all(value,c("<"="(",">"=")"))) %>%
    mutate(text_hyphen = str_c("* ",value,"\n")) %>%
    group_by(chinese) %>%
    summarise(text = reduce(text_hyphen,str_c),
              english = first(english)) %>%
    mutate(text = str_trim(text)) %>%
    select(chinese,english,text) %>%
    arrange(english)

#check if there is missing chinese text
if(any(is.na(output_table$chinese))) stop("output_table")

write_csv(output_table,"output/same_hero_announcer_text.csv")

